[
    {
        "id": "a7231f61188ee96e",
        "type": "sqlite",
        "z": "7d551c48106025c7",
        "mydb": "fe775cdef0b98bdb",
        "sqlquery": "prepared",
        "sql": "INSERT INTO printerdata (component, status , liferemaining, estpages, estdays, printerurl) VALUES ($val1, $val2, $val3,$val4, $val5, $val6)",
        "name": "into_sqldata",
        "x": 830,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "af489741c7a20e28",
        "type": "function",
        "z": "7d551c48106025c7",
        "name": "prepare-params",
        "func": "\n\nmsg.params = {\n    $val1: msg.payload.component, \n    $val2: msg.payload.status,\n    $val3: msg.payload.liferemaining,\n    $val4: msg.payload.estpages,\n    $val5: msg.payload.estdays,\n    $val6: msg.payload.printerurl\n    \n    }\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 80,
        "wires": [
            [
                "0058133e86fc814b"
            ]
        ]
    },
    {
        "id": "11647df7ae8d2bce",
        "type": "inject",
        "z": "7d551c48106025c7",
        "name": "printer-json-data 2stk",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"component\":\"Magenta\",\"status\":\"ERROR\",\"liferemaining\":\"44%\",\"estpages\":128,\"estdays\":66,\"printerurl\":\"printer1\"},{\"component\":\"Yellow\",\"status\":\"ERROR\",\"liferemaining\":\"33%\",\"estpages\":1258,\"estdays\":636,\"printerurl\":\"printer4\"},{\"component\":\"Trommelkassett (R1)\",\"status\":\"unknown\",\"liferemaining\":\"16%\",\"estpages\":555,\"estdays\":11,\"printerurl\":\"printer3\"}]",
        "payloadType": "json",
        "x": 140,
        "y": 160,
        "wires": [
            [
                "79ae20dedc835432",
                "cd027851cd3f6dad"
            ]
        ]
    },
    {
        "id": "0faf6ca9804d6f4f",
        "type": "debug",
        "z": "7d551c48106025c7",
        "name": "payloadres",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 240,
        "wires": []
    },
    {
        "id": "cd027851cd3f6dad",
        "type": "split",
        "z": "7d551c48106025c7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 290,
        "y": 80,
        "wires": [
            [
                "af489741c7a20e28"
            ]
        ]
    },
    {
        "id": "599869c4b8ba596f",
        "type": "sqlite",
        "z": "7d551c48106025c7",
        "mydb": "fe775cdef0b98bdb",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "xeroxdata",
        "x": 480,
        "y": 240,
        "wires": [
            [
                "0faf6ca9804d6f4f",
                "c3d495986a3d1a4c",
                "79ae20dedc835432"
            ]
        ]
    },
    {
        "id": "926cbfbd7862f9d2",
        "type": "function",
        "z": "7d551c48106025c7",
        "name": "select all",
        "func": "msg.topic = \"select component, status, liferemaining, estpages, estdays, printerurl, timestamp from printerdata\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 240,
        "wires": [
            [
                "599869c4b8ba596f"
            ]
        ]
    },
    {
        "id": "26b7d67a60cbd488",
        "type": "inject",
        "z": "7d551c48106025c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 240,
        "wires": [
            [
                "926cbfbd7862f9d2"
            ]
        ]
    },
    {
        "id": "0058133e86fc814b",
        "type": "delay",
        "z": "7d551c48106025c7",
        "name": "delay 1 sec",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 650,
        "y": 80,
        "wires": [
            [
                "a7231f61188ee96e"
            ]
        ]
    },
    {
        "id": "98801a0d59d2ee93",
        "type": "function",
        "z": "7d551c48106025c7",
        "name": "count all",
        "func": "msg.topic = \"select count(*) as antall from printerdata\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 300,
        "wires": [
            [
                "599869c4b8ba596f"
            ]
        ]
    },
    {
        "id": "ea54b8134bd6d803",
        "type": "inject",
        "z": "7d551c48106025c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 300,
        "wires": [
            [
                "98801a0d59d2ee93"
            ]
        ]
    },
    {
        "id": "c3d495986a3d1a4c",
        "type": "function",
        "z": "7d551c48106025c7",
        "d": true,
        "name": "format chart data",
        "func": "// Create a data variable   \nvar series = [\"temp DegC\"];\nvar labels = [\"Data Values\"];\nvar data = \"[[\";\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    data += '{ \"x\":' + msg.payload[i].ts2 + ', \"y\":' + msg.payload[i].EstPages + '}';\n    if (i < (msg.payload.length - 1)) {\n        data += \",\"\n    } else {\n        data += \"]]\"\n    }\n}\nvar jsondata = JSON.parse(data);\nmsg.payload = [{ \"series\": series, \"data\": jsondata, \"labels\": labels }];\n\n\nreturn msg;  \n\n\n/*\n\nvar series = [\"temp DegC\"];  \n var labels = [\"Data Values\"];  \n var data = \"[[\";  \n   \n for (var i=0; i < msg.payload.length; i++) {  \n   data += '{ \"x\":' + msg.payload[i].thetime + ', \"y\":' + msg.payload[i].thetemp + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data += \",\"  \n   } else {  \n     data += \"]]\"  \n   }  \n }  \n var jsondata = JSON.parse(data);  \n msg.payload = [{\"series\": series, \"data\": jsondata, \"labels\": labels}];  \n   \n   \n return msg;  \n\n */",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 380,
        "wires": [
            [
                "c984fe0952763ca3"
            ]
        ]
    },
    {
        "id": "c984fe0952763ca3",
        "type": "debug",
        "z": "7d551c48106025c7",
        "d": true,
        "name": "debug 356",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 440,
        "wires": []
    },
    {
        "id": "79ae20dedc835432",
        "type": "ui-template",
        "z": "7d551c48106025c7",
        "group": "fb2e77ec2c2a5dd1",
        "page": "",
        "ui": "",
        "name": "Header configuration",
        "order": 2,
        "width": "0",
        "height": "0",
        "head": "",
        "format": "<template>\n  <!-- Provide an input text box to search the content -->\n  <v-text-field v-model=\"search\" label=\"Search\" prepend-inner-icon=\"mdi-magnify\" single-line variant=\"outlined\"\n    hide-details></v-text-field>\n  <v-data-table v-model:search=\"search\" :items=\"msg?.payload\">\n\n<template v-slot:header.liferemaining>\n  <div class=\"text-center\">Life Remaining</div>\n</template>\n\n    <template v-slot:item.estpages=\"{ item }\">\n      <!-- Add a custom suffix \"years\" after the number -->\n      <v-chip :color=\"getChipColor(item)\">\n        {{ item.estpages }}\n      </v-chip>\n    </template>\n\n      <template v-slot:item.estdays=\"{ item }\">\n        <!-- Add a custom suffix \"years\" after the number -->\n        <v-chip :color=\"getChipColor2(item)\">\n          {{ item.estdays }}\n        </v-chip>\n      </template>\n\n  <template v-slot:item.component=\"{ item }\">\n    <v-chip size=\"large\" class=\"ma-2\" label :color=\"getColor(item.component)\" >{{ item.component }}</v-chip>\n     \n  </template>\n\n  <template v-slot:item.status=\"{ item }\">\n    <v-chip :color=\"getColorStatus(item.status)\" variant=\"text\"> {{ item.status }}</v-chip>\n  </template>\n\n\n\n\n\n  </v-data-table>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n          sortBy: [{ key: 'timestamp', order: 'desc' }],\n        search: ''\n      }\n    },\n    methods: {\n        // add a function to determine the color of the progress bar given the row's item\n      \n        getColorStatus (status) {\n        if (status == \"ERROR\") return 'red'\n        else if (status == \"Pink\") return 'pink'\n        else if (status == \"Yellow\") return 'yellow'\n        else if (status == \"Red\") return 'red'\n        else return 'grey'\n        },\n    getColor (component) {\n      if (component == \"Cyan\") return 'cyan'\n        else if (component == \"Magenta\") return 'pink'\n        else if (component == \"Yellow\") return 'yellow'\n        else if (component == \"Black\") return 'grey' \n      else return 'Secondary'\n    },\n      getChipColor: function (item) {\n        if (item !== undefined ) {\n          if (item.estpages < 55) {\n            return 'red';\n            } else {\n              if (item.estpages > 120) {\n                return 'green';\n              } else {\n                return 'orange';\n            }\n          }\n        }\n      },\n    getChipColor2: function (item) {\n    if (item !== undefined ) {\n      if (item.estdays < 55) { return 'red' ; \n        } else { if (item.estdays> 120) {\n          return 'green';\n        } else {\n          return 'orange';\n            }\n          }\n        }\n      }\n    }   \n    \n  }\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 800,
        "y": 160,
        "wires": [
            [
                "0cfebc978c48f137"
            ]
        ]
    },
    {
        "id": "a9358af563ad640b",
        "type": "inject",
        "z": "7d551c48106025c7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 570,
        "y": 140,
        "wires": [
            [
                "79ae20dedc835432"
            ]
        ]
    },
    {
        "id": "296468c62b8e9e88",
        "type": "ui-markdown",
        "z": "7d551c48106025c7",
        "d": true,
        "group": "fb2e77ec2c2a5dd1",
        "name": "Text - Header and Items",
        "order": 3,
        "width": 0,
        "height": 0,
        "content": "# Customizing Header and Items\n\n## Linking items to the table\n\nIn the `v-data-table` tag, `:items=\"msg.payload\"` describes that the items to be displayed in the table are stored in `msg.payload` of the incoming message.\n\n## Search\n\nIt is possible to add a simple client side filter to the table values that filters on any column values in the table.\nFirst, it needs a search field `v-text-field` before (or after) the table:\n```\n    <v-text-field v-model=\"search\" label=\"Search\" prepend-inner-icon=\"mdi-magnify\" single-line variant=\"outlined\"\n        hide-details></v-text-field>\n```\nAnd also needs to be linked to the table using the `v-model:search=\"search\"` attribute:\n```\n    <v-data-table v-model:search=\"search\" :items=\"msg.payload\">\n```\n\n## Column headers\n\nBy default the column headers are same as the field names with capital first letter. But it can be overriden to any text if needed:\n```\n        <template v-slot:header.EstPages>\n          <div class=\"text-center\">EV Owner</div>\n        </template>\n\nIt needs a `template` tag with `v-slot` attribute, which says `header:xxx` where xxx is the field name. And within that the text can be defined. In the example above \"Customer Satisfaction\" in centre justified, otherwise it is left justified.\n\n## Convert value to linked\n\nIn the Email column an mailto: hyperlink is formatted, instead of the full email printed on the screen.\n```\n      <template v-slot:item.PrinterUrl=\"{ item }\">\n        <!-- turn the email column to an Email hyperlink -->\n        <a :href=\"'mailto:' + item.PrinterUrl\">Email</a>\n      </template>\n```\nSimilar to the header changes, this also needs a `template` tag with `v-slot` attribute, which now says `item:xxx` where xxx is the field name.\nThe value of `href` is calculated therefore it is shown as `:href` indicating that the value is not a text but an expression.\n\n## Convert value to Chip\n\nAge is displayed as a chip, basically the value is cirled and shown with a background color. `{{ item.age }}` prints the age value and the work \" years\" is printed after it.\n```\n      <template v-slot:item.EstPages=\"{ item }\">\n        <v-chip :color=\"getChipColor(item)\">\n          {{ item.EstPages }} test\n        </v-chip>\n      </template>\n```\nThe `color` attribute is determined my a function, so again it is referenced as `:color`. Function is defined in the methods section.\n\n## Convert value to icon\n\n\n\n## Convert value to rating\n\n\n\n## Convert to Linear progress\n\n\n\n## Script section\n\n### data section\n\nIn the data section only the `search` variable is defined which stores the search value entered in the input field and pass it over to the table to filter the results.\n```\n    data () {\n      return {\n        search: ''\n      }\n    },\n```\n\n### methods section\n\nThe methods section contains all the functions that are used by the chip, icon, progress components and determine color or icon for the component. The object for each record is stored in the `item` variable. I pass the entire `item` object to these functions, and they can reference to each field of it by `item.age`, `item.ev`, etc. And return either the color name, or icon name, etc.\n",
        "className": "",
        "x": 550,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "8f57fcef901973b7",
        "type": "inject",
        "z": "7d551c48106025c7",
        "name": "printer-json-data 2stk",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"component\":\"Yellow\",\"status\":\"ERROR\",\"liferemaining\":\"80%\",\"estpages\":128,\"estdays\":66,\"printerurl\":\"printer1\"},{\"component\":\"Pink\",\"status\":\"OK\",\"liferemaining\":\"44%&\",\"estpages\":1258,\"estdays\":636,\"printerurl\":\"printer4\"},{\"component\":\"Cyan\",\"status\":\"yes\",\"liferemaining\":\"80&\",\"estpages\":555,\"estdays\":66,\"printerurl\":\"printer3\"}]",
        "payloadType": "json",
        "x": 420,
        "y": 180,
        "wires": [
            [
                "79ae20dedc835432"
            ]
        ]
    },
    {
        "id": "0cfebc978c48f137",
        "type": "debug",
        "z": "7d551c48106025c7",
        "name": "debug 363",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 160,
        "wires": []
    },
    {
        "id": "3666ae6ddab623b0",
        "type": "ui-button",
        "z": "7d551c48106025c7",
        "group": "fb2e77ec2c2a5dd1",
        "name": "",
        "label": "Load historic printerdata",
        "order": 0,
        "width": "4",
        "height": "1",
        "passthru": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 200,
        "wires": [
            [
                "926cbfbd7862f9d2"
            ]
        ]
    },
    {
        "id": "fe775cdef0b98bdb",
        "type": "sqlitedb",
        "db": "c:\\sqlite3\\xerox.db",
        "mode": "RWC"
    },
    {
        "id": "fb2e77ec2c2a5dd1",
        "type": "ui-group",
        "name": "Table examples",
        "page": "c466b7e4bb472f99",
        "width": "20",
        "height": "1",
        "order": -1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "c466b7e4bb472f99",
        "type": "ui-page",
        "name": "Tables",
        "ui": "cb79bc4520925e32",
        "path": "/tables",
        "icon": "table",
        "layout": "notebook",
        "theme": "e49b17229db5bb0b",
        "order": -1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "cb79bc4520925e32",
        "type": "ui-base",
        "name": "My UI",
        "path": "/dashboard",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false
    },
    {
        "id": "e49b17229db5bb0b",
        "type": "ui-theme",
        "name": "Theme Name",
        "colors": {
            "surface": "#000000",
            "primary": "#0094ce",
            "bgPage": "#222020",
            "groupBg": "#000000",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    }
]