[
    {
        "id": "fa64ff49b8b6cb0b",
        "type": "tab",
        "label": "xerox2db",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1e34f6d5a73b419d",
        "type": "sqlite",
        "z": "fa64ff49b8b6cb0b",
        "mydb": "d0ad73640e3bcaf3",
        "sqlquery": "prepared",
        "sql": "INSERT INTO printerdata (component, status , liferemaining, estpages, estdays, printerurl) VALUES ($val1, $val2, $val3,$val4, $val5, $val6)",
        "name": "into_sqldata",
        "x": 890,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c59063c1a31e7a17",
        "type": "function",
        "z": "fa64ff49b8b6cb0b",
        "name": "prepare-params",
        "func": "\n\nmsg.params = {\n    $val1: msg.payload.component, \n    $val2: msg.payload.status,\n    $val3: msg.payload.liferemaining,\n    $val4: msg.payload.estpages,\n    $val5: msg.payload.estdays,\n    $val6: msg.payload.printerurl\n    \n    }\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 180,
        "wires": [
            [
                "025c791b755d7263"
            ]
        ]
    },
    {
        "id": "fe37a9ed86b798af",
        "type": "inject",
        "z": "fa64ff49b8b6cb0b",
        "name": "demodata",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"component\":\"Magenta\",\"status\":\"ERROR\",\"liferemaining\":\"44%\",\"estpages\":128,\"estdays\":66,\"printerurl\":\"printer1\"},{\"component\":\"Yellow\",\"status\":\"ERROR\",\"liferemaining\":\"33%\",\"estpages\":1258,\"estdays\":636,\"printerurl\":\"printer4\"},{\"component\":\"Trommelkassett (R1)\",\"status\":\"unknown\",\"liferemaining\":\"16%\",\"estpages\":555,\"estdays\":11,\"printerurl\":\"printer3\"}]",
        "payloadType": "json",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "ec276d432cdda7b9",
                "368a3dcf24a64557"
            ]
        ]
    },
    {
        "id": "ad794e59c144b05b",
        "type": "debug",
        "z": "fa64ff49b8b6cb0b",
        "name": "payloadres",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 340,
        "wires": []
    },
    {
        "id": "368a3dcf24a64557",
        "type": "split",
        "z": "fa64ff49b8b6cb0b",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 350,
        "y": 200,
        "wires": [
            [
                "c59063c1a31e7a17"
            ]
        ]
    },
    {
        "id": "5a60fc538a1f0b97",
        "type": "sqlite",
        "z": "fa64ff49b8b6cb0b",
        "mydb": "d0ad73640e3bcaf3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "xeroxdata",
        "x": 560,
        "y": 420,
        "wires": [
            [
                "ad794e59c144b05b",
                "ec276d432cdda7b9"
            ]
        ]
    },
    {
        "id": "736e627c7f1b3aad",
        "type": "function",
        "z": "fa64ff49b8b6cb0b",
        "name": "select all",
        "func": "msg.topic = \"select component, status, liferemaining, estpages, estdays, printerurl, timestamp from printerdata\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 420,
        "wires": [
            [
                "5a60fc538a1f0b97"
            ]
        ]
    },
    {
        "id": "9f70fda0549dc03f",
        "type": "inject",
        "z": "fa64ff49b8b6cb0b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "736e627c7f1b3aad"
            ]
        ]
    },
    {
        "id": "025c791b755d7263",
        "type": "delay",
        "z": "fa64ff49b8b6cb0b",
        "name": "delay 1 sec",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 710,
        "y": 180,
        "wires": [
            [
                "1e34f6d5a73b419d"
            ]
        ]
    },
    {
        "id": "07406c8da45cf499",
        "type": "function",
        "z": "fa64ff49b8b6cb0b",
        "name": "count all",
        "func": "msg.topic = \"select count(*) as antall from printerdata\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 480,
        "wires": [
            [
                "5a60fc538a1f0b97"
            ]
        ]
    },
    {
        "id": "dfb884299399a404",
        "type": "inject",
        "z": "fa64ff49b8b6cb0b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 500,
        "wires": [
            [
                "07406c8da45cf499"
            ]
        ]
    },
    {
        "id": "d4bf4863ca3bd112",
        "type": "function",
        "z": "fa64ff49b8b6cb0b",
        "name": "format chart data",
        "func": "// Create a data variable   \nvar series = [\"temp DegC\"];\nvar labels = [\"Data Values\"];\nvar data = \"[[\";\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    data += '{ \"x\":' + msg.payload[i].ts2 + ', \"y\":' + msg.payload[i].estpages + '}';\n    if (i < (msg.payload.length - 1)) {\n        data += \",\"\n    } else {\n        data += \"]]\"\n    }\n}\nvar jsondata = JSON.parse(data);\nmsg.payload = [{ \"series\": series, \"data\": jsondata, \"labels\": labels }];\n\n\nreturn msg;  \n\n\n/*\n\nvar series = [\"temp DegC\"];  \n var labels = [\"Data Values\"];  \n var data = \"[[\";  \n   \n for (var i=0; i < msg.payload.length; i++) {  \n   data += '{ \"x\":' + msg.payload[i].thetime + ', \"y\":' + msg.payload[i].thetemp + '}';  \n   if (i < (msg.payload.length - 1)) {  \n     data += \",\"  \n   } else {  \n     data += \"]]\"  \n   }  \n }  \n var jsondata = JSON.parse(data);  \n msg.payload = [{\"series\": series, \"data\": jsondata, \"labels\": labels}];  \n   \n   \n return msg;  \n\n */",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "ec276d432cdda7b9",
        "type": "ui-template",
        "z": "fa64ff49b8b6cb0b",
        "group": "ec56c2a77b8b0b40",
        "page": "",
        "ui": "",
        "name": "Header configuration",
        "order": 2,
        "width": "0",
        "height": "0",
        "head": "",
        "format": "<template>\n  <!-- Provide an input text box to search the content -->\n  <v-text-field v-model=\"search\" label=\"Search\" prepend-inner-icon=\"mdi-magnify\" single-line variant=\"outlined\"\n    hide-details></v-text-field>\n  <v-data-table v-model:search=\"search\" :items=\"msg?.payload\">\n\n\n  <template v-slot:item.printerurl=\"{ item }\">\n        <!-- turn the email column to an Email hyperlink -->\n        <a :href=\"item.printerurl\">{{item.printerurl}}</a>\n      </template>\n\n\n\n<template v-slot:item.liferemaining=\"{ item }\">\n  <!-- Display the progress as a linear progress -->\n  <v-progress-linear :color=\"getProgressColor(item)\" :model-value=\"item.liferemaining\" bg-color=\"yellow\" height=\"20\"></v-progress-linear>\n  \n\n    <span class=\"progress-bar-txt\">\n            {{item.liferemaining}}%\n        </span>\n\n   \n</template>\n\n    <template v-slot:item.estpages=\"{ item }\">\n      <!-- Add a custom suffix \"years\" after the number -->\n      <v-chip :color=\"getChipColor(item)\">\n        {{ item.estpages }}\n      </v-chip>\n    </template>\n\n      <template v-slot:item.estdays=\"{ item }\">\n        <!-- Add a custom suffix \"years\" after the number -->\n        <v-chip :color=\"getChipColor2(item)\">\n          {{ item.estdays }}\n        </v-chip>\n      </template>\n\n  <template v-slot:item.component=\"{ item }\">\n    <v-chip size=\"large\" class=\"ma-2\" label :color=\"getColor(item.component)\" >{{ item.component }}</v-chip>\n     \n  </template>\n\n  <template v-slot:item.status=\"{ item }\">\n    <v-chip :color=\"getColorStatus(item.status)\" variant=\"text\"> {{ item.status }}</v-chip>\n  </template>\n\n\n\n\n\n  </v-data-table>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n          sortBy: [{ key: 'timestamp', order: 'desc' }],\n        search: ''\n      }\n    },\n    methods: {\n        // add a function to determine the color of the progress bar given the row's item\n      \n        getColorStatus (status) {\n        if (status == \"ERROR\") return 'red'\n        else if (status == \"Pink\") return 'pink'\n        else if (status == \"Yellow\") return 'yellow'\n        else if (status == \"Red\") return 'red'\n        else return 'grey'\n        },\n    getProgressColor: function (item) {\n    if (item !== undefined ) {\n    if (item.liferemaining < 30) { return 'red' ; } \n      else { if (item.liferemaining> 130) {\n      return 'orange';\n      } else {\n      return 'green';\n      }\n      }\n      }\n      },\n    getColor (component) {\n      if (component == \"Cyan Toner\") return 'cyan'\n        else if (component == \"Magenta Toner\") return 'pink'\n        else if (component == \"Yellow Toner\") return 'yellow'\n        else if (component == \"Black Toner\") return 'grey' \n      else return 'Secondary'\n    },\n      getChipColor: function (item) {\n        if (item !== undefined ) {\n          if (item.estpages < 7500) {\n            return 'red';\n            } else {\n              if (item.estpages > 15000) {\n                return 'green';\n              } else {\n                return 'orange';\n            }\n          }\n        }\n      },\n    getChipColor2: function (item) {\n    if (item !== undefined ) {\n      if (item.estdays < 55) { return 'red' ; \n        } else { if (item.estdays> 120) {\n          return 'green';\n        } else {\n          return 'orange';\n            }\n          }\n        }\n      }\n    }   \n    \n  }\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 860,
        "y": 260,
        "wires": [
            [
                "1bd02d239820fb20"
            ]
        ]
    },
    {
        "id": "ed29a98839c4cf86",
        "type": "inject",
        "z": "fa64ff49b8b6cb0b",
        "name": "empty table",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 650,
        "y": 240,
        "wires": [
            [
                "ec276d432cdda7b9"
            ]
        ]
    },
    {
        "id": "1bd02d239820fb20",
        "type": "debug",
        "z": "fa64ff49b8b6cb0b",
        "name": "debug 363",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 260,
        "wires": []
    },
    {
        "id": "d1c37b991fe4674b",
        "type": "ui-button",
        "z": "fa64ff49b8b6cb0b",
        "group": "ec56c2a77b8b0b40",
        "name": "",
        "label": "Load from DB",
        "order": 2,
        "width": "4",
        "height": "1",
        "passthru": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "736e627c7f1b3aad"
            ]
        ]
    },
    {
        "id": "209883e1576e61e5",
        "type": "http request",
        "z": "fa64ff49b8b6cb0b",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "localhost:3000/printers",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 170,
        "y": 80,
        "wires": [
            [
                "da1d33ac8063762d"
            ]
        ]
    },
    {
        "id": "da1d33ac8063762d",
        "type": "json",
        "z": "fa64ff49b8b6cb0b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 170,
        "y": 140,
        "wires": [
            [
                "f18f91983d309afb"
            ]
        ]
    },
    {
        "id": "f18f91983d309afb",
        "type": "change",
        "z": "fa64ff49b8b6cb0b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.*. {\t    \"component\": component,\t    \"status\": status,\t    \"liferemaining\": $replace(liferemaining,  /[^0-9]/,\"\"),\t    \"estpages\": estpages,\t    \"estdays\": estdays,\t    \"printerurl\": printerurl,\t    \"timestamp\": timestamp\t    \t}\t\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 140,
        "y": 200,
        "wires": [
            [
                "ed0552767490750f",
                "368a3dcf24a64557"
            ]
        ]
    },
    {
        "id": "ed0552767490750f",
        "type": "debug",
        "z": "fa64ff49b8b6cb0b",
        "name": "debug 364",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 100,
        "wires": []
    },
    {
        "id": "1c982b58fdb4fa19",
        "type": "inject",
        "z": "fa64ff49b8b6cb0b",
        "name": "web-scrape data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 20,
        "wires": [
            [
                "209883e1576e61e5"
            ]
        ]
    },
    {
        "id": "2fb63b5451b6eb28",
        "type": "function",
        "z": "fa64ff49b8b6cb0b",
        "name": "select all",
        "func": "msg.topic = \"select component, estpages, ts2 from printerdata where printerurl like '%lev%' AND component like  '%lack%'\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 680,
        "wires": [
            [
                "e213bfa271229e44"
            ]
        ]
    },
    {
        "id": "71c89a13f7366a5d",
        "type": "inject",
        "z": "fa64ff49b8b6cb0b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 600,
        "wires": [
            [
                "2fb63b5451b6eb28"
            ]
        ]
    },
    {
        "id": "207e8d039b1cc6b4",
        "type": "debug",
        "z": "fa64ff49b8b6cb0b",
        "name": "debug 365",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 760,
        "wires": []
    },
    {
        "id": "e213bfa271229e44",
        "type": "sqlite",
        "z": "fa64ff49b8b6cb0b",
        "mydb": "d0ad73640e3bcaf3",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "xeroxdata",
        "x": 480,
        "y": 700,
        "wires": [
            [
                "207e8d039b1cc6b4",
                "d4bf4863ca3bd112"
            ]
        ]
    },
    {
        "id": "628bd79aa7bd6dbb",
        "type": "function",
        "z": "fa64ff49b8b6cb0b",
        "name": "data",
        "func": "let last = context.get(\"last\") ?? 100;\nlet time = context.get(\"time\") ?? new Date().getTime();\n\nlast += Math.floor(Math.random()*10)-5;\ntime +=1000;\ncontext.set(\"last\", last);\ncontext.set(\"time\", time);\n\nvar m = [\n    { topic: \"Temperature 1\", payload: { x: time, y: last } },\n    { topic: \"Temperature 2\", payload: { x: time, y: last +10 } },\n    { topic: \"Temperature 3\", payload: { x: time, y: last +25 } },\n    { topic: \"Temperature 4\", payload: { x: time, y: last +35 } },\n    { topic: \"Temperature 5\", payload: { x: time, y: last -20 } },\n    ];\nreturn [m];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "18bdba549a0c5447",
        "type": "inject",
        "z": "fa64ff49b8b6cb0b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 580,
        "wires": [
            [
                "628bd79aa7bd6dbb"
            ]
        ]
    },
    {
        "id": "a0f18ef233a361f6",
        "type": "ui-template",
        "z": "fa64ff49b8b6cb0b",
        "d": true,
        "group": "ec56c2a77b8b0b40",
        "page": "",
        "ui": "",
        "name": "Header configuration",
        "order": 1,
        "width": "0",
        "height": "0",
        "head": "",
        "format": "<template>\n  <!-- Provide an input text box to search the content -->\n  <v-text-field v-model=\"search\" label=\"Search\" prepend-inner-icon=\"mdi-magnify\" single-line variant=\"outlined\"\n    hide-details></v-text-field>\n  <v-data-table v-model:search=\"search\" :items=\"msg?.payload\">\n\n\n  <template v-slot:item.printerurl=\"{ item }\">\n        <!-- turn the email column to an Email hyperlink -->\n        <a :href=\"item.printerurl\">{{item.printerurl}}</a>\n      </template>\n\n\n\n<template v-slot:item.liferemaining=\"{ item }\">\n  <!-- Display the progress as a linear progress -->\n  <v-progress-linear :color=\"getProgressColor(item)\" :model-value=\"item.liferemaining\" bg-color=\"yellow\" height=\"20\"></v-progress-linear>\n  \n\n    <span class=\"progress-bar-txt\">\n            {{item.liferemaining}}%\n        </span>\n\n   \n</template>\n\n    <template v-slot:item.estpages=\"{ item }\">\n      <!-- Add a custom suffix \"years\" after the number -->\n      <v-chip :color=\"getChipColor(item)\">\n        {{ item.estpages }}\n      </v-chip>\n    </template>\n\n      <template v-slot:item.estdays=\"{ item }\">\n        <!-- Add a custom suffix \"years\" after the number -->\n        <v-chip :color=\"getChipColor2(item)\">\n          {{ item.estdays }}\n        </v-chip>\n      </template>\n\n  <template v-slot:item.component=\"{ item }\">\n    <v-chip size=\"large\" class=\"ma-2\" label :color=\"getColor(item.component)\" >{{ item.component }}</v-chip>\n     \n  </template>\n\n  <template v-slot:item.status=\"{ item }\">\n    <v-chip :color=\"getColorStatus(item.status)\" variant=\"text\"> {{ item.status }}</v-chip>\n  </template>\n\n\n\n\n\n  </v-data-table>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n          sortBy: [{ key: 'timestamp', order: 'desc' }],\n        search: ''\n      }\n    },\n    methods: {\n        // add a function to determine the color of the progress bar given the row's item\n      \n        getColorStatus (status) {\n        if (status == \"ERROR\") return 'red'\n        else if (status == \"Pink\") return 'pink'\n        else if (status == \"Yellow\") return 'yellow'\n        else if (status == \"Red\") return 'red'\n        else return 'grey'\n        },\n    getProgressColor: function (item) {\n    if (item !== undefined ) {\n    if (item.liferemaining < 30) { return 'red' ; } \n      else { if (item.liferemaining> 130) {\n      return 'orange';\n      } else {\n      return 'green';\n      }\n      }\n      }\n      },\n    getColor (component) {\n      if (component == \"Cyan Toner\") return 'cyan'\n        else if (component == \"Magenta Toner\") return 'pink'\n        else if (component == \"Yellow Toner\") return 'yellow'\n        else if (component == \"Black Toner\") return 'grey' \n      else return 'Secondary'\n    },\n      getChipColor: function (item) {\n        if (item !== undefined ) {\n          if (item.estpages < 7500) {\n            return 'red';\n            } else {\n              if (item.estpages > 15000) {\n                return 'green';\n              } else {\n                return 'orange';\n            }\n          }\n        }\n      },\n    getChipColor2: function (item) {\n    if (item !== undefined ) {\n      if (item.estdays < 55) { return 'red' ; \n        } else { if (item.estdays> 120) {\n          return 'green';\n        } else {\n          return 'orange';\n            }\n          }\n        }\n      }\n    }   \n    \n  }\n</script>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1060,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "d0ad73640e3bcaf3",
        "type": "sqlitedb",
        "db": "C:\\Users\\06194828\\data\\xeroxdata",
        "mode": "RWC"
    },
    {
        "id": "ec56c2a77b8b0b40",
        "type": "ui-group",
        "name": "Group Name",
        "page": "9a0625b471898271",
        "width": "6",
        "height": "1",
        "order": -1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "9a0625b471898271",
        "type": "ui-page",
        "name": "xeroxdata",
        "ui": "cab857bcba65cd9d",
        "path": "/xerox",
        "icon": "home",
        "layout": "grid",
        "theme": "021dbd451b85569b",
        "order": -1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "cab857bcba65cd9d",
        "type": "ui-base",
        "name": "UI Name",
        "path": "/dashboard",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false
    },
    {
        "id": "021dbd451b85569b",
        "type": "ui-theme",
        "name": "Black",
        "colors": {
            "surface": "#222120",
            "primary": "#0094ce",
            "bgPage": "#222020",
            "groupBg": "#222120",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    }
]